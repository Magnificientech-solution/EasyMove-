version: '3.8'

services:
  # Web application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      # Payment configuration (values will be provided at runtime)
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      # Database configuration
      - DATABASE_URL=postgresql://neondb_owner:npg_ZHuQwa4IJFs2@ep-black-feather-a6wn3nvk.us-west-2.aws.neon.tech/neondb?sslmode=require
      # Optional API keys
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=neondb_owner
      - POSTGRES_PASSWORD=npg_ZHuQwa4IJFs2
      - POSTGRES_DB=neondb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # PgAdmin for database management (optional, development only)
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data:

# IMPORTANT: This is a template file. Before running, you need to:
# 1. Create a .env file with real environment variables
# 2. Replace email/password values with secure credentials
# 3. In production, remove pgadmin service completely