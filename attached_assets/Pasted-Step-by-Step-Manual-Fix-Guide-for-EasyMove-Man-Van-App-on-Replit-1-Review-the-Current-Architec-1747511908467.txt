Step-by-Step Manual Fix Guide for EasyMove Man & Van App on Replit
ðŸ§© 1. Review the Current Architecture
Goal: Understand existing structure to isolate where issues occur.

Actions:
Inspect server/index.ts or app.ts (Express backend).

Locate frontend in /src (likely React with Vite).

Review .env or Replit Secrets setup.

Confirm routes for:

Quote Calculation

Payment (Stripe/PayPal)

Order Creation

ðŸ“¦ 2. Fix Quote Generation Engine
Goal: Accurately generate quotes based on distance + item list + return cost logic.

A. Enable Google APIs
Enable:

Distance Matrix API

Maps JavaScript API

Geocoding API

Confirm API key is stored in .env:

env
Copy
Edit
GOOGLE_API_KEY=your_api_key_here
B. Update Distance Calculator Logic:
ts
Copy
Edit
async function calculateDistance(origin, destination) {
  const url = `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${encodeURIComponent(origin)}&destinations=${encodeURIComponent(destination)}&key=${process.env.GOOGLE_API_KEY}`;

  const response = await fetch(url);
  const data = await response.json();

  const meters = data.rows[0].elements[0].distance.value;
  const miles = meters / 1609.34;
  return miles;
}
C. Quote Breakdown Formula:
ts
Copy
Edit
function generateQuote({ miles, items, returnTrip = false }) {
  const baseRatePerMile = 2.2;
  const itemHandlingFee = items.length * 5; // Flat Â£5/item
  const distanceCost = miles * baseRatePerMile;
  const returnDiscount = returnTrip ? 0.3 * distanceCost : 0;
  
  const totalCost = distanceCost + itemHandlingFee - returnDiscount;
  const vat = 0.2 * totalCost;
  const platformFee = 0.25 * totalCost;
  const driverFee = totalCost - platformFee;

  return {
    totalCost: totalCost.toFixed(2),
    vat: vat.toFixed(2),
    platformFee: platformFee.toFixed(2),
    driverFee: driverFee.toFixed(2)
  };
}
ðŸ’³ 3. Fix Payment Integration
A. Stripe Integration
Ensure this route works:

ts
Copy
Edit
app.post("/create-payment-intent", async (req, res) => {
  const { amount } = req.body;

  try {
    const paymentIntent = await stripe.paymentIntents.create({
      amount: Math.round(amount * 100), // Convert to pence
      currency: "gbp",
      automatic_payment_methods: { enabled: true },
    });

    res.send({ clientSecret: paymentIntent.client_secret });
  } catch (error) {
    res.status(500).send({ error: error.message });
  }
});
B. PayPal Fix
Ensure you're not using /api/ prefix for PayPal routes (as noted in your doc).

C. Add Frontend Payment Handler
Ensure you're passing correct amount to <StripeCheckoutForm amount={amount} />

Create a clean form submission handler:

tsx
Copy
Edit
const handlePayment = async () => {
  const res = await fetch("/create-payment-intent", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ amount }),
  });

  const { clientSecret } = await res.json();
  setClientSecret(clientSecret);
};
ðŸ“‹ 4. Build Quote Form on Frontend
Goal: Let user enter:

Pickup & drop-off address

Select van size

List of items (sofa, bed, boxes, etc.)

Option for return trip

Sample Form UI:
tsx
Copy
Edit
<form onSubmit={handleQuoteSubmit}>
  <input type="text" placeholder="Pickup Address" />
  <input type="text" placeholder="Delivery Address" />
  <textarea placeholder="List items to move" />
  <select>
    <option>Small Van</option>
    <option>Medium Van</option>
    <option>Luton Van</option>
  </select>
  <input type="checkbox" /> Return trip?
  <button>Calculate Quote</button>
</form>
Output:
Display a quote breakdown:

Base cost

Item handling

Return trip discount

VAT

Final amount

ðŸ–¼ 5. Improve Design and Add Van Images
A. Add free van images:
Use https://unsplash.com/s/photos/removal-van or pexels.com

B. Update Styles:
Use TailwindCSS or modern CSS classes

Use world-class font like Inter, Poppins, or Lato

Ensure responsive layout with media queries or flexbox/grid

ðŸš€ 6. Test & Deploy
Thoroughly test:

Different addresses

Edge cases (zero distance, bad addresses)

Stripe/PayPal payments

Deploy via Render.com or use Replit's built-in deployment (slow)

ðŸ“¦ Final Checklist
Feature	Status
Accurate Quote Engine	âœ…
Item-based Cost Input	âœ…
Distance & Effort Factor	âœ…
Payment Integration (Stripe)	âœ…
Payment Integration (PayPal)	âœ…
Platform/Driver Fee Split	âœ…
Responsive Frontend UI	âœ…
High-Quality Van Images	âœ…
Live Deployment